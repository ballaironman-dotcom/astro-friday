---
import { render } from 'astro:content'
import config from 'virtual:astro-friday-config'
import ArticleDetail from '../../components/ArticleDetail.astro'
import ArticleTOC from '../../components/ArticleTOC.astro'
import DefaultLayout from '../../layouts/Default.astro'
import { getPostList } from '../../utils/content/post'
import { getPath } from '../../utils/path'

export async function getStaticPaths() {
  const entryList = await getPostList()

  return entryList.map(entry => ({
    params: {
      collection: entry.collection,
      slug: entry.id,
    },
    props: {
      entry,
    },
  }))
}

// const { collection, slug } = Astro.params

const { entry } = Astro.props

const {
  Content,
  headings,
  // @ts-expect-error never
} = await render(entry)

const toc = {
  ...config.post.toc,
  ...entry.data.toc,
}
---

<DefaultLayout
  seo={{
    noindex: entry.data.draft,
    nofollow: entry.data.draft,
    openGraph: {
      basic: {
        title: entry.data.title,
        type: 'article',
        image: getPath(
          'og',
          config.post.pathStyle === 'collection/id'
            ? [entry.collection, entry.id]
            : [entry.id],
          { host: Astro.url.origin },
        ),
        url: Astro.url.href,
      },
      article: {
        publishedTime: entry.data.created,
        modifiedTime: entry.data.modified || entry.data.created,
        authors: [entry.data.author],
        section: undefined,
        tags: entry.data.tags,
      },
      image: {
        type: 'image/png',
        width: 1200,
        height: 630,
        alt: entry.data.title,
      },
    },
    extend: {
      meta: [
        { name: 'keywords', content: entry.data.keywords.join(', ') || '' },
      ],
    },
  }}
>
  <ArticleDetail {entry}>
    { toc.enable && headings.length ? (<ArticleTOC {headings} {toc} />) : null }

    <Content />
  </ArticleDetail>
</DefaultLayout>
